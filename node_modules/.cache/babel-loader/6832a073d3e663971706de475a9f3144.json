{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BAZRA\\\\Desktop\\\\Bazra project\\\\project react js\\\\react-expense-dashboard-master\\\\src\\\\components\\\\SignupAM.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect, useMemo, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useHistory } from \"react-router-dom\";\nimport PhoneInput from \"react-phone-number-input\";\nimport \"react-phone-number-input/style.css\";\nimport \"./FontawsomeIcons\";\nimport scrollreveal from \"scrollreveal\";\nimport { Form, Button } from 'semantic-ui-react';\nimport swal from 'sweetalert';\nimport { useForm } from \"react-hook-form\";\nimport \"./Form1.css\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst eye = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faEye\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 13\n}, this);\n\nconst SignupAM = () => {\n  _s();\n\n  useEffect(() => {\n    const sr = scrollreveal({\n      origin: \"bottom\",\n      distance: \"80px\",\n      duration: 2000,\n      reset: false\n    });\n    sr.reveal(`\n      .form-containerxx\n    `, {\n      opacity: 0,\n      interval: 100\n    });\n  }, []);\n\n  const togglePasswordVisiblity = () => {\n    setPasswordShown(passwordShown ? false : true);\n  };\n\n  const [passwordShown, setPasswordShown] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data);\n    handleClick();\n  };\n\n  const passwordx = useRef({});\n  passwordx.current = watch(\"passwordx\", \"\");\n  useEffect(() => {\n    const sr = scrollreveal({\n      origin: \"top\",\n      distance: \"80px\",\n      duration: 2000,\n      reset: false\n    });\n    sr.reveal(`\n      .form-container \n    `, {\n      opacity: 0,\n      interval: 100\n    });\n  }, []);\n  const history = useHistory();\n\n  const login = () => {\n    history.push(\"/ver\");\n  };\n\n  const [agree, setAgree] = useState(false);\n  const [firstName, setFirst_Name] = useState(\"\");\n  const [lastName, setLast_Name] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setRe_password] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\");\n  const [businessLNum, setBusinessLNum] = useState(\"\");\n  const [licenceNumber, setLicenceNumber] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [phone, setPhone] = useState();\n  const [app_user, setApp_user] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  const handleClick = e => {\n    signupxx();\n\n    const checkboxHandler = () => {// if agree === true, it will be set to false\n      // if agree === false, it will be set to true\n      // Don't miss the exclamation mark\n    };\n\n    async function signupxx() {\n      console.warn(username.password);\n      const userinfo = {\n        businessLNum,\n        confirmPassword,\n        companyName,\n        email,\n        firstName,\n        licenceNumber,\n        lastName,\n        password,\n        username\n      };\n      let item = {\n        businessLNum,\n        confirmPassword,\n        companyName,\n        email,\n        firstName,\n        licenceNumber,\n        lastName,\n        password,\n        username\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          \"Accept\": \"application/json\"\n        },\n        body: JSON.stringify(item)\n      };\n      const url = \"http://ec2-3-82-60-217.compute-1.amazonaws.com:8080/api/signup/agent\";\n\n      try {\n        const response = await fetch(url, options);\n        const result = await response.json();\n        console.log(result);\n        localStorage.setItem(\"user-info\", JSON.stringify(result));\n        localStorage.setItem('message', JSON.stringify(result['message']));\n        const mess = localStorage.getItem('message');\n\n        if (response.ok) {\n          console.log(\"Signup successful\");\n          swal(\"Successful\", \"Welcom\", \"success\", {\n            buttons: false,\n            timer: 2000\n          });\n          history.push(\"/loginm\");\n        } else {\n          console.log(\"failed\");\n          swal(\"Error\", \"Faild to signup\", \"error\");\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      height: '90vh'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-containerxx\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Agent Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-labelx\",\n            children: \"Phone Numer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PhoneInput, {\n            international: true,\n            countryCallingCodeEditable: true,\n            placeholder: \"Enter your Phone Number\",\n            type: \"text\",\n            name: \"phonex\",\n            value: username,\n            ...register(\"phonex\", {\n              required: {\n                value: true,\n                message: \"Please Enter your Phone number\"\n              },\n              minLength: {\n                value: 10,\n                message: \" must have at least 10 number\"\n              },\n              maxLength: {\n                value: 16,\n                message: \" must not be greater than at 15 number\"\n              }\n            }),\n            onChange: setUsername\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), errors.phonex && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.phonex.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"globe\",\n            className: \"fa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-labelx\",\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            type: \"text\",\n            name: \"first_name\",\n            placeholder: \"Enter your Company Name\",\n            ...register(\"countryx\", {\n              required: {\n                value: true,\n                maxLength: 30,\n                message: \"Please Enter Company Name\"\n              },\n              pattern: {\n                value: /[A-Za-z]+$/,\n                message: \"Only Letters\"\n              }\n            }),\n            value: companyName,\n            onChange: e => setCompanyName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 1\n          }, this), \"   \", errors.countryx && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.countryx.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"user\",\n            className: \"fa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-labelx\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            type: \"text\",\n            name: \"first_name\",\n            placeholder: \"Enter your First name\",\n            value: firstName,\n            ...register(\"First\", {\n              required: {\n                value: true,\n                message: \"Please enter your First Name\"\n              },\n              pattern: {\n                value: /[A-Za-z]+$/,\n                message: \"Only Letters\"\n              },\n              pattern: {\n                value: /^[A-Z][a-z]+[,.'-]?(?: [A-Z][a-z]+[,.'-]?)*$/,\n                message: \"start with uppercase\"\n              },\n              minLength: {\n                value: 2,\n                message: \" must have at least 2 characters\"\n              },\n              maxLength: {\n                value: 10,\n                message: \" must not be greater than at 10 character\"\n              }\n            }),\n            onChange: e => setFirst_Name(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), errors.First && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.First.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"user\",\n            className: \"fa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-labelx\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            type: \"text\",\n            name: \"last_name\",\n            placeholder: \"Enter your Last name\",\n            value: lastName,\n            ...register(\"Last\", {\n              required: {\n                value: true,\n                message: \"Please enter your Last Name\"\n              },\n              minLength: {\n                value: 2,\n                message: \" must have at least 2 characters\"\n              },\n              pattern: {\n                value: /[A-Za-z]+$/,\n                message: \"Only Letters\"\n              },\n              pattern: {\n                value: /^[A-Z][a-z]+[,.'-]?(?: [A-Z][a-z]+[,.'-]?)*$/,\n                message: \"start with uppercase\"\n              }\n            }),\n            onChange: e => setLast_Name(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this), errors.Last && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.Last.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"envelope\",\n            className: \"fa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-labelx\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Enter your email\",\n            ...register(\"email\", {\n              required: {\n                value: true,\n                message: \"Please enter your email address\"\n              },\n              pattern: {\n                value: /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: \"Invalid email address\"\n              }\n            }),\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form-input-icon\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: \"calendar\",\n              className: \"fa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-labelx\",\n            children: \"Business Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Business Number\",\n            className: \"form-input\",\n            placeholder: \"Enter Business Number\",\n            value: businessLNum,\n            ...register(\"userx\", {\n              required: {\n                value: true,\n                message: \"Business Number is Required\"\n              },\n              pattern: {\n                value: /^\\+?\\d*$/,\n                message: \"Only Number\"\n              }\n            }),\n            onChange: e => setBusinessLNum(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), errors.userx && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.userx.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"user\",\n            className: \"fa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-labelx\",\n            children: \"Licence Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            type: \"text\",\n            name: \"Licence Number\",\n            placeholder: \"Enter your Licence Number\",\n            value: licenceNumber,\n            ...register(\"user\", {\n              required: {\n                value: true,\n                message: \"Licence Number is Required\"\n              },\n              pattern: {\n                value: /^\\+?\\d*$/,\n                message: \"Only Number\"\n              }\n            }),\n            onChange: e => setLicenceNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), errors.user && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.user.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"lock\",\n            className: \"fa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-labelx\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            name: \"passwordx\",\n            placeholder: \"Enter your Password\",\n            type: passwordShown ? \"text\" : \"password\",\n            ...register(\"passwordx\", {\n              required: \"You must specify a password\",\n              minLength: {\n                value: 8,\n                message: \"Password must have at least 8 characters\"\n              },\n              pattern: {\n                value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n                message: \"at least one uppercase letter, one lowercase letter and one number\"\n              }\n            }),\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: togglePasswordVisiblity,\n            children: eye\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 16\n          }, this), errors.passwordx && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.passwordx.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-inputs\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"lock\",\n            className: \"fa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-labelx\",\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-input\",\n            name: \"password_repeat\",\n            placeholder: \"Confirm your Password\",\n            type: passwordShown ? \"text\" : \"password\",\n            ...register(\"password_repeat\", {\n              validate: value => value === passwordx.current || \"The passwords do not match\"\n            }),\n            onChange: e => setRe_password(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            onClick: togglePasswordVisiblity,\n            children: eye\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 14\n          }, this), errors.password_repeat && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: errors.password_repeat.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 42\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"form-input-btncc\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form-input-login\",\n          children: [\"Already have an account? Login \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/logina\",\n            children: \"here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SignupAM, \"bRbeRkmYH8UPfa50Li6p+az2IaE=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = SignupAM;\nexport default SignupAM;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupAM\");","map":{"version":3,"sources":["C:/Users/BAZRA/Desktop/Bazra project/project react js/react-expense-dashboard-master/src/components/SignupAM.js"],"names":["React","useState","useEffect","useMemo","useRef","FontAwesomeIcon","useHistory","PhoneInput","scrollreveal","Form","Button","swal","useForm","faEye","eye","SignupAM","sr","origin","distance","duration","reset","reveal","opacity","interval","togglePasswordVisiblity","setPasswordShown","passwordShown","register","handleSubmit","watch","formState","errors","onSubmit","data","console","log","handleClick","passwordx","current","history","login","push","agree","setAgree","firstName","setFirst_Name","lastName","setLast_Name","email","setEmail","password","setPassword","confirmPassword","setRe_password","companyName","setCompanyName","businessLNum","setBusinessLNum","licenceNumber","setLicenceNumber","role","setRole","phone","setPhone","app_user","setApp_user","username","setUsername","e","signupxx","checkboxHandler","warn","userinfo","item","options","method","headers","body","JSON","stringify","url","response","fetch","result","json","localStorage","setItem","mess","getItem","ok","buttons","timer","error","display","justifyContent","alignItems","height","required","value","message","minLength","maxLength","phonex","pattern","target","countryx","First","Last","userx","user","validate","password_repeat"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect, useMemo  ,useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PhoneInput from \"react-phone-number-input\";\r\nimport \"react-phone-number-input/style.css\";\r\nimport \"./FontawsomeIcons\";\r\nimport scrollreveal from \"scrollreveal\";\r\nimport { Form, Button } from 'semantic-ui-react';\r\nimport swal from 'sweetalert';\r\nimport { useForm } from \"react-hook-form\";\r\nimport \"./Form1.css\";\r\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\r\nconst eye = <FontAwesomeIcon icon={faEye} />;\r\nconst SignupAM = () => {\r\n\r\n  \r\n  useEffect(() => {\r\n    const sr = scrollreveal({\r\n      origin: \"bottom\",\r\n      distance: \"80px\",\r\n      duration: 2000,\r\n      reset: false,\r\n    });\r\n    sr.reveal(\r\n      `\r\n      .form-containerxx\r\n    `,\r\n      {\r\n        opacity: 0,\r\n        interval: 100,\r\n      }\r\n    );\r\n  }, []);\r\n \r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  };\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const { register, handleSubmit, watch,formState: { errors } } = useForm();\r\n    const onSubmit = (data) => {\r\n        console.log(data);\r\n        handleClick()\r\n       }\r\n       const passwordx = useRef({});\r\n       passwordx.current = watch(\"passwordx\", \"\");\r\n\r\n  useEffect(() => {\r\n    const sr = scrollreveal({\r\n      origin: \"top\",\r\n      distance: \"80px\",\r\n      duration: 2000,\r\n      reset: false,\r\n    });\r\n    sr.reveal(\r\n      `\r\n      .form-container \r\n    `,\r\n      {\r\n        opacity: 0,\r\n        interval: 100,\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  const history = useHistory();\r\n\r\n  const login = () => {\r\n    history.push(\"/ver\");\r\n  };\r\n  const [agree, setAgree] = useState(false);\r\n  const [firstName, setFirst_Name] = useState(\"\");\r\n  const [lastName, setLast_Name] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setRe_password] = useState(\"\");\r\n  const [companyName, setCompanyName] = useState(\"\");\r\n  const [businessLNum, setBusinessLNum] = useState(\"\");\r\n  const [licenceNumber, setLicenceNumber] = useState(\"\");\r\n  const [role, setRole] = useState(\"\");\r\n  const [phone, setPhone] = useState();\r\n  const [app_user, setApp_user] = useState([]);\r\n  const [username , setUsername] = useState(\"\");\r\n\r\n  const handleClick = (e) => {\r\n   \r\n    signupxx()\r\n  \r\n    \r\n    \r\n  const checkboxHandler = () => {\r\n    // if agree === true, it will be set to false\r\n    // if agree === false, it will be set to true\r\n    // Don't miss the exclamation mark\r\n  };\r\n  async function signupxx(){\r\n \r\n    console.warn(username.password)\r\n    const userinfo = {\r\n      businessLNum,\r\n      confirmPassword,\r\n      companyName,\r\n      email,\r\n      firstName,\r\n      licenceNumber,\r\n      lastName,\r\n      password,\r\n      username,\r\n     \r\n     \r\n    \r\n    };\r\n   \r\n    let item={businessLNum,\r\n      confirmPassword,\r\n     companyName,\r\n      email,\r\n      firstName,\r\n      licenceNumber,\r\n      lastName,\r\n      password,\r\n      username,};\r\n   const options={\r\n        method:'POST',\r\n        headers:{\r\n  \r\n            'Content-Type':'application/json',\r\n            \"Accept\":\"application/json\",\r\n           \r\n           \r\n        },\r\n        body:JSON.stringify(item)\r\n        \r\n    }\r\n    const url =(\"http://ec2-3-82-60-217.compute-1.amazonaws.com:8080/api/signup/agent\")\r\n    try{\r\n     const response= await fetch(url,options);\r\n      const result =await response.json();\r\n     console.log(result);\r\n      localStorage.setItem(\"user-info\",JSON.stringify(result))\r\n      localStorage.setItem('message', JSON.stringify(result['message']))\r\n       const mess= localStorage.getItem('message')\r\n      if(response.ok){\r\n        console.log(\"Signup successful\")\r\n        swal(\"Successful\", \"Welcom\", \"success\", {\r\n          buttons: false,\r\n          timer: 2000,\r\n        })\r\n        history.push(\"/loginm\")\r\n      }else{\r\n        console.log(\"failed\")\r\n      swal( \"Error\", \"Faild to signup\", \"error\")\r\n      }\r\n      }catch(error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    \r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: '90vh'\r\n      }}\r\n    >\r\n      \r\n        <div className='form-containerxx'>\r\n      \r\n\r\n    <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\r\n<h1>Agent Sign Up</h1>\r\n\r\n        <div className=\"form-inputs\">\r\n            <label className=\"form-labelx\">Phone Numer</label>\r\n            <PhoneInput\r\n              international\r\n              countryCallingCodeEditable={true}\r\n              placeholder=\"Enter your Phone Number\"\r\n              type=\"text\"\r\n              name=\"phonex\"\r\n              value={username}\r\n              {...register(\"phonex\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please Enter your Phone number\",\r\n                },\r\n                minLength: {\r\n                  value: 10,\r\n                  message: \" must have at least 10 number\"\r\n                      },\r\n                     \r\n                     \r\n                maxLength: {\r\n                  value: 16,\r\n                  message: \" must not be greater than at 15 number\"\r\n                      },\r\n              })}\r\n            \r\n              onChange={setUsername}\r\n             \r\n            />\r\n\r\n{errors.phonex && <p >{errors.phonex.message}</p>}\r\n          </div>\r\n          \r\n          <div className=\"form-inputs\">\r\n            {/* country */}\r\n            <FontAwesomeIcon icon=\"globe\" className=\"fa\" />\r\n            <label className=\"form-labelx\">Company Name</label>\r\n     \r\n\r\n<input\r\n  className=\"form-input\"\r\n  type=\"text\"\r\n  name=\"first_name\"\r\n  placeholder=\"Enter your Company Name\"\r\n\r\n  {...register(\"countryx\", { required: { value: true, maxLength: 30,message: \"Please Enter Company Name\",},\r\n  pattern: {\r\n    value:\r\n    /[A-Za-z]+$/,\r\n    message: \"Only Letters\",\r\n  }, },)}\r\n  value={companyName}\r\n  onChange={(e) => setCompanyName(e.target.value)}\r\n \r\n/>   {errors.countryx && <p >{errors.countryx.message}</p>}\r\n          </div>\r\n         \r\n          <div className=\"form-inputs\">\r\n            <FontAwesomeIcon icon=\"user\" className=\"fa\" />\r\n            <label className=\"form-labelx\">First Name</label>\r\n\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              name=\"first_name\"\r\n              placeholder=\"Enter your First name\"\r\n              value={firstName}\r\n              {...register(\"First\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter your First Name\",\r\n                },\r\n                pattern: {\r\n                  value:\r\n                  /[A-Za-z]+$/,\r\n                  message: \"Only Letters\",\r\n                },\r\n                \r\n                pattern: {\r\n                  value:\r\n                  /^[A-Z][a-z]+[,.'-]?(?: [A-Z][a-z]+[,.'-]?)*$/,\r\n                  message: \"start with uppercase\",\r\n                },\r\n                minLength: {\r\n                  value: 2,\r\n                  message: \" must have at least 2 characters\"\r\n                      },\r\n                      maxLength: {\r\n                        value: 10,\r\n                        message: \" must not be greater than at 10 character\"\r\n                            },\r\n              })}\r\n              onChange={(e) => setFirst_Name(e.target.value)}\r\n            />\r\n                {errors.First && <p >{errors.First.message}</p>}\r\n          </div>\r\n  \r\n          <div className=\"form-inputs\">\r\n            <FontAwesomeIcon icon=\"user\" className=\"fa\" />\r\n            <label className=\"form-labelx\">Last Name</label>\r\n\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              name=\"last_name\"\r\n              placeholder=\"Enter your Last name\"\r\n              value={lastName}\r\n              {...register(\"Last\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter your Last Name\",\r\n                },\r\n                minLength: {\r\n                  value: 2,\r\n                  message: \" must have at least 2 characters\"\r\n                      },\r\n                      pattern: {\r\n                        value:\r\n                        /[A-Za-z]+$/,\r\n                        message: \"Only Letters\",\r\n                      },\r\n                      \r\n                \r\n                pattern: {\r\n                  value:\r\n                  /^[A-Z][a-z]+[,.'-]?(?: [A-Z][a-z]+[,.'-]?)*$/,\r\n                  message: \"start with uppercase\",\r\n                },\r\n              })}\r\n              onChange={(e) => setLast_Name(e.target.value)}\r\n            />\r\n             {errors.Last && <p >{errors.Last.message}</p>}\r\n          </div>\r\n          <div className=\"form-inputs\">\r\n            <FontAwesomeIcon icon=\"envelope\" className=\"fa\" />\r\n            <label className=\"form-labelx\">Email</label>\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              {...register(\"email\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Please enter your email address\",\r\n                },\r\n                pattern: {\r\n                  value:\r\n                    /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n                  message: \"Invalid email address\",\r\n                },\r\n              })}\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n                    {errors.email && <p >{errors.email.message}</p>}\r\n          </div>\r\n  \r\n          <div className=\"form-inputs\">\r\n            <span className=\"form-input-icon\">\r\n              <FontAwesomeIcon icon=\"calendar\" className=\"fa\" />\r\n            </span>\r\n\r\n            <label className=\"form-labelx\">Business Number</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"Business Number\"\r\n              className=\"form-input\"\r\n              placeholder=\"Enter Business Number\"\r\n              value={businessLNum}\r\n              {...register(\"userx\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Business Number is Required\",\r\n                },\r\n                pattern: {\r\n                  value:\r\n                  /^\\+?\\d*$/,\r\n                  message: \"Only Number\",\r\n                },\r\n               \r\n              })}\r\n              onChange={(e) => setBusinessLNum(e.target.value)}\r\n             \r\n            />\r\n             {errors.userx && <p >{errors.userx.message}</p>}\r\n          </div>\r\n         \r\n          \r\n          <div className=\"form-inputs\">\r\n            <FontAwesomeIcon icon=\"user\" className=\"fa\" />\r\n            <label className=\"form-labelx\">Licence Number</label>\r\n\r\n            <input\r\n              className=\"form-input\"\r\n              type=\"text\"\r\n              name=\"Licence Number\"\r\n              placeholder=\"Enter your Licence Number\"\r\n              value={licenceNumber}\r\n           \r\n              {...register(\"user\", {\r\n                required: {\r\n                  value: true,\r\n                  message: \"Licence Number is Required\",\r\n                },\r\n                pattern: {\r\n                  value:\r\n                  /^\\+?\\d*$/,\r\n                  message: \"Only Number\",\r\n                },\r\n               \r\n              })}\r\n              onChange={(e) => setLicenceNumber(e.target.value)}\r\n            />\r\n   \r\n                 {errors.user && <p >{errors.user.message}</p>}\r\n          </div>\r\n          \r\n         \r\n          <div className=\"form-inputs\">\r\n            <FontAwesomeIcon icon=\"lock\" className=\"fa\" />\r\n            <label className=\"form-labelx\">Password</label>\r\n            <input\r\n              className=\"form-input\"\r\n              name=\"passwordx\"\r\n              placeholder=\"Enter your Password\"\r\n              type={passwordShown ? \"text\" : \"password\"}\r\n              {...register(\"passwordx\",{\r\n                required: \"You must specify a password\",\r\n               minLength: {\r\n            value: 8,\r\n            message: \"Password must have at least 8 characters\"\r\n                }\r\n                ,\r\n                pattern: {\r\n                  value:\r\n                    /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\r\n                  message: \"at least one uppercase letter, one lowercase letter and one number\",\r\n                }\r\n                ,})}\r\n             \r\n              onChange={(e) => setPassword(e.target.value)}\r\n            /> <i onClick={togglePasswordVisiblity}>{eye}</i>\r\n               {errors.passwordx && <p>{errors.passwordx.message}</p>}\r\n          </div>\r\n     \r\n          <div className=\"form-inputs\">\r\n            <FontAwesomeIcon icon=\"lock\" className=\"fa\" />\r\n            <label className=\"form-labelx\">Confirm Password</label>\r\n            <input\r\n                className=\"form-input\"\r\n                name=\"password_repeat\"\r\n                placeholder=\"Confirm your Password\"\r\n                type={passwordShown ? \"text\" : \"password\"}\r\n                 {...register(\"password_repeat\",{ validate: value =>\r\n                    value === passwordx.current || \"The passwords do not match\"\r\n                  })}\r\n            \r\n                  onChange={(e) =>  setRe_password(e.target.value)}\r\n                 \r\n            />\r\n             <i onClick={togglePasswordVisiblity}>{eye}</i>\r\n              {errors.password_repeat && <p >{ errors.password_repeat.message}</p>}\r\n          </div>\r\n         \r\n        <Button className=\"form-input-btncc\"  \r\n           >\r\n        Sign up\r\n        </Button>\r\n        <span className=\"form-input-login\">\r\n            Already have an account? Login <a href=\"/logina\">here</a>\r\n          </span>\r\n        </form>\r\n       \r\n      </div>\r\n      \r\n     \r\n    </div>\r\n    \r\n    \r\n    \r\n  );\r\n};\r\n\r\nexport default SignupAM;\r\n"]},"metadata":{},"sourceType":"module"}