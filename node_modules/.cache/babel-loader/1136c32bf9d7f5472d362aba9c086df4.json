{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emanh\\\\OneDrive\\\\Desktop\\\\adminsside\\\\Admin\\\\admin\\\\src\\\\MTable.js\",\n    _s = $RefreshSig$();\n\nimport faker from 'faker';\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport \"./Form1.css\";\nimport scrollreveal from \"scrollreveal\";\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\nimport { BiRotateLeft } from \"react-icons/bi\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Avatar, Grid, Typography, TablePagination, TableFooter } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 1500\n  },\n  tableContainer: {\n    borderRadius: 15,\n    margin: '0.001px 100px 10px 10px',\n    maxWidth: 1500\n  },\n  tableHeaderCell: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.getContrastText(theme.palette.primary.dark)\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.getContrastText(theme.palette.primary.light)\n  },\n  name: {\n    fontWeight: 'bold',\n    color: theme.palette.secondary.dark\n  },\n  status: {\n    fontWeight: 'bold',\n    fontSize: '0.75rem',\n    color: 'white',\n    backgroundColor: 'grey',\n    borderRadius: 8,\n    padding: '3px 10px',\n    display: 'inline-block'\n  }\n}));\nlet summaryw = [],\n    STATUSES = ['Active', 'Pending', 'Blocked'];\n\nfor (let i = 0; i < 14; i++) {\n  summaryw[i] = {\n    name: faker.name.findName(),\n    email: faker.internet.email(),\n    phone: faker.phone.phoneNumber(),\n    jobTitle: faker.name.jobTitle(),\n    company: faker.company.companyName(),\n    joinDate: faker.date.past().toLocaleDateString('en-US'),\n    status: STATUSES[Math.floor(Math.random() * STATUSES.length)]\n  };\n}\n\nfunction MTable() {\n  _s();\n\n  useEffect(() => {\n    const sr = scrollreveal({\n      origin: \"bottom\",\n      distance: \"80px\",\n      duration: 2000,\n      reset: false\n    });\n    sr.reveal(`\n      .form-containerxc\n    `, {\n      opacity: 0,\n      interval: 100\n    });\n  }, []);\n  const jwt = JSON.parse(localStorage.getItem('jwt'));\n  const summaryw = JSON.parse(localStorage.getItem('summary'));\n  console.log(summaryw);\n  const [users, setUsers] = useState(summaryw.slice(0, 50));\n  const [query, SetQuery] = useState(\"\");\n  console.log(summaryw.filter(summaryw => summaryw.fromAccountNumber.includes(\"10\")));\n  fetch(\"http://192.168.1.14:8080/api/Accounts/AllTransactions\", {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json',\n      \"Accept\": \"application/json\",\n      \"Authorization\": `Bearer ${jwt}`\n    }\n  }).then(response => response.json()).then(response => {\n    localStorage.setItem('summary', JSON.stringify(response['summary']));\n    const summary = localStorage.getItem('summary');\n    console.log(summary);\n    this.setState({\n      friends: response\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(12);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const reloadPage = () => {\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-containerxc\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search__bar12\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search__bar1\",\n        type: \"text\",\n        placeholder: \"Search\",\n        onChange: e => SetQuery(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"search__bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: classes.tableContainer,\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        id: \"table-to-xls\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              children: \"FromAccountNumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              children: \"To Account\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              children: \" Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              children: \"DateTime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: summaryw.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).filter(summaryw => summaryw.transactionDateTime.includes(query)).map(summaryw => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 2,\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: summaryw.name,\n                    src: \".\",\n                    className: classes.fromAccountNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 10,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: classes.accountNumber,\n                    children: summaryw.accountNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"primary\",\n                variant: \"subtitle2\",\n                children: summaryw.fromAccountNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: summaryw.transactionAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.status,\n                style: {\n                  backgroundColor: summaryw.transaction_type === 'Active' && 'green' || summaryw.transaction_type === 'Pending' && 'blue' || summaryw.transaction_type === 'Blocked' && 'orange'\n                },\n                children: summaryw.transactionDateTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.status,\n                style: {\n                  backgroundColor: summaryw.transaction_type === 'Deposit' && 'green' || summaryw.transaction_type === 'Transfer' && 'blue' || summaryw.transaction_type === 'withdraw' && 'orange'\n                },\n                children: summaryw.transaction_type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this)]\n          }, summaryw.fromAccountNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n          children: /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [5, 10, 15, 20, 25],\n            component: \"div\",\n            count: summaryw.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            onChangePage: handleChangePage,\n            onChangeRowsPerPage: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ReactHTMLTableToExcel, {\n        id: \"test-table-xls-button\",\n        className: \"download-table-xls-button\",\n        table: \"table-to-xls\",\n        filename: \"tablexls\",\n        sheet: \"tablexls\",\n        buttonText: \"Export To Excel\",\n        color: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MTable, \"2Yb6XIdi7hMnwvUKGA1Sj6xMXKQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = MTable;\nexport default MTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"MTable\");","map":{"version":3,"sources":["C:/Users/emanh/OneDrive/Desktop/adminsside/Admin/admin/src/MTable.js"],"names":["faker","React","useState","useEffect","makeStyles","scrollreveal","ReactHTMLTableToExcel","BiRotateLeft","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Avatar","Grid","Typography","TablePagination","TableFooter","useStyles","theme","table","minWidth","tableContainer","borderRadius","margin","maxWidth","tableHeaderCell","fontWeight","backgroundColor","palette","primary","dark","color","getContrastText","avatar","light","name","secondary","status","fontSize","padding","display","summaryw","STATUSES","i","findName","email","internet","phone","phoneNumber","jobTitle","company","companyName","joinDate","date","past","toLocaleDateString","Math","floor","random","length","MTable","sr","origin","distance","duration","reset","reveal","opacity","interval","jwt","JSON","parse","localStorage","getItem","console","log","users","setUsers","slice","query","SetQuery","filter","fromAccountNumber","includes","fetch","method","headers","then","response","json","setItem","stringify","summary","setState","friends","catch","err","classes","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","reloadPage","window","location","reload","e","transactionDateTime","map","accountNumber","transactionAmount","transaction_type"],"mappings":"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","sourcesContent":["import faker from 'faker'\r\nimport React ,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport \"./Form1.css\"\r\nimport scrollreveal from \"scrollreveal\";\r\nimport ReactHTMLTableToExcel from 'react-html-table-to-excel';\r\nimport {BiRotateLeft } from \"react-icons/bi\";\r\nimport{ \r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Avatar,\r\n    Grid,\r\n    Typography,\r\n    TablePagination,\r\n    TableFooter\r\n }from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n      minWidth: 1500,\r\n     \r\n    },\r\n    tableContainer: {\r\n        borderRadius: 15,\r\n        margin: '0.001px 100px 10px 10px',\r\n        maxWidth: 1500,\r\n       \r\n    },\r\n    tableHeaderCell: {\r\n        fontWeight: 'bold',\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.getContrastText(theme.palette.primary.dark)\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.getContrastText(theme.palette.primary.light)\r\n    },\r\n    name: {\r\n        fontWeight: 'bold',\r\n        color: theme.palette.secondary.dark\r\n    },\r\n    status: {\r\n        fontWeight: 'bold',\r\n        fontSize: '0.75rem',\r\n        color: 'white',\r\n        backgroundColor: 'grey',\r\n        borderRadius: 8,\r\n        padding: '3px 10px',\r\n        display: 'inline-block'\r\n    }\r\n  }));\r\n\r\nlet summaryw = [], STATUSES = ['Active', 'Pending', 'Blocked'];\r\nfor(let i=0;i<14;i++) {\r\n    summaryw[i] = {\r\n        name: faker.name.findName(),\r\n        email: faker.internet.email(),\r\n        phone: faker.phone.phoneNumber(),\r\n        jobTitle: faker.name.jobTitle(),\r\n        company: faker.company.companyName(),\r\n        joinDate: faker.date.past().toLocaleDateString('en-US'),\r\n        status: STATUSES[Math.floor(Math.random() * STATUSES.length)]\r\n    }\r\n}\r\n\r\nfunction MTable() {\r\n\r\n  useEffect(() => {\r\n    const sr = scrollreveal({\r\n      origin: \"bottom\",\r\n      distance: \"80px\",\r\n      duration: 2000,\r\n      reset: false,\r\n    });\r\n    sr.reveal(\r\n      `\r\n      .form-containerxc\r\n    `,\r\n      {\r\n        opacity: 0,\r\n        interval: 100,\r\n      }\r\n    );\r\n  }, []);\r\n \r\n  const jwt =JSON.parse(localStorage.getItem('jwt'));\r\nconst summaryw=JSON.parse(localStorage.getItem('summary'));\r\nconsole.log(summaryw)\r\nconst [users, setUsers] = useState(summaryw.slice(0, 50));\r\nconst [query , SetQuery]= useState(\"\");\r\nconsole.log(summaryw.filter(summaryw=>summaryw.fromAccountNumber.includes(\"10\")))\r\n  fetch(\"http://192.168.1.14:8080/api/Accounts/AllTransactions\", {\r\n  method: \"GET\",\r\n   headers: {\r\n    'Content-Type':'application/json',\r\n          \"Accept\":\"application/json\",\r\n          \"Authorization\":`Bearer ${jwt}`\r\n  }\r\n})\r\n.then(response => response.json())\r\n.then(response => {\r\n    localStorage.setItem('summary', JSON.stringify(response['summary']));\r\n    const summary = localStorage.getItem('summary')\r\n      console.log(summary)\r\n      \r\n   \r\n    \r\n  this.setState({\r\n    friends: response\r\n    \r\n  })\r\n \r\n})\r\n.catch(err => { console.log(err); \r\n});\r\n \r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(12);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const reloadPage = () => {\r\n    window.location.reload()\r\n  }\r\n  return (\r\n    <div className='form-containerxc'>\r\n      <div className=\"search__bar12\">\r\n\r\n          <input className=\"search__bar1\" type=\"text\" placeholder=\"Search\" onChange={(e)=> SetQuery(e.target.value)} />\r\n         \r\n          <h4 className=\"search__bar\" ></h4> \r\n     \r\n    </div>\r\n\r\n    <TableContainer component={Paper} className={classes.tableContainer}>\r\n   \r\n      <Table className={classes.table} aria-label=\"simple table\" id=\"table-to-xls\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.tableHeaderCell}>FromAccountNumber</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>To Account</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}> Amount</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>DateTime</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {summaryw.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).filter(summaryw=>summaryw.transactionDateTime.includes(query)).map((summaryw) => (\r\n            <TableRow key={summaryw.fromAccountNumber}>\r\n              <TableCell>\r\n                  <Grid container>\r\n                      <Grid item lg={2}>\r\n                          <Avatar alt={summaryw.name} src='.' className={classes.fromAccountNumber}/>\r\n                      </Grid>\r\n                      <Grid item lg={10}>\r\n                          <Typography className={classes.accountNumber}>{summaryw.accountNumber}</Typography>\r\n                         \r\n                      </Grid>\r\n                      \r\n                  </Grid>\r\n                </TableCell>\r\n              <TableCell>\r\n                  <Typography color=\"primary\" variant=\"subtitle2\">{summaryw.fromAccountNumber}</Typography>\r\n            \r\n                </TableCell>\r\n              <TableCell>{summaryw.transactionAmount}</TableCell>\r\n              <TableCell>\r\n                  <Typography \r\n                    className={classes.status}\r\n                    style={{\r\n                        backgroundColor: \r\n                        ((summaryw.transaction_type === 'Active' && 'green' ) ||\r\n                        (summaryw.transaction_type === 'Pending' && 'blue') ||\r\n                        (summaryw.transaction_type === 'Blocked' && 'orange'))\r\n                    }}\r\n                  >{summaryw.transactionDateTime}</Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography \r\n                    className={classes.status}\r\n                    style={{\r\n                        backgroundColor: \r\n                        ((summaryw.transaction_type === 'Deposit' && 'green' )||\r\n                        (summaryw.transaction_type === 'Transfer' && 'blue') ||\r\n                        (summaryw.transaction_type === 'withdraw' && 'orange'))\r\n                    }}\r\n                  >{summaryw.transaction_type}</Typography>\r\n                </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n        <TableFooter>\r\n        <TablePagination\r\n            rowsPerPageOptions={[5, 10, 15,20,25]}\r\n            component=\"div\"\r\n            count={summaryw.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        </TableFooter>\r\n      </Table>\r\n      <ReactHTMLTableToExcel\r\n        id=\"test-table-xls-button\"\r\n        className=\"download-table-xls-button\"\r\n        table=\"table-to-xls\"\r\n        filename=\"tablexls\"\r\n        sheet=\"tablexls\"\r\n        buttonText=\"Export To Excel\"\r\n        color=\"white\"\r\n      />\r\n    </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MTable;"]},"metadata":{},"sourceType":"module"}