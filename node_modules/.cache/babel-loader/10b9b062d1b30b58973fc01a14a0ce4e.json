{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BAZRA\\\\Desktop\\\\Bazra project\\\\project react js\\\\Admin\\\\admin\\\\src\\\\MTable.js\",\n    _s = $RefreshSig$();\n\nimport faker from 'faker';\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Avatar, Grid, Typography, TablePagination, TableFooter } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650\n  },\n  tableContainer: {\n    borderRadius: 15,\n    margin: '10px 10px',\n    maxWidth: 950\n  },\n  tableHeaderCell: {\n    fontWeight: 'bold',\n    backgroundColor: theme.palette.primary.dark,\n    color: theme.palette.getContrastText(theme.palette.primary.dark)\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.light,\n    color: theme.palette.getContrastText(theme.palette.primary.light)\n  },\n  name: {\n    fontWeight: 'bold',\n    color: theme.palette.secondary.dark\n  },\n  status: {\n    fontWeight: 'bold',\n    fontSize: '0.75rem',\n    color: 'white',\n    backgroundColor: 'grey',\n    borderRadius: 8,\n    padding: '3px 10px',\n    display: 'inline-block'\n  }\n}));\nlet summaryw = [],\n    STATUSES = ['Active', 'Pending', 'Blocked'];\n\nfor (let i = 0; i < 14; i++) {\n  summaryw[i] = {\n    name: faker.name.findName(),\n    email: faker.internet.email(),\n    phone: faker.phone.phoneNumber(),\n    jobTitle: faker.name.jobTitle(),\n    company: faker.company.companyName(),\n    joinDate: faker.date.past().toLocaleDateString('en-US'),\n    status: STATUSES[Math.floor(Math.random() * STATUSES.length)]\n  };\n}\n\nfunction MTable() {\n  _s();\n\n  const jwt = JSON.parse(localStorage.getItem('jwt'));\n  const summaryw = JSON.parse(localStorage.getItem('summary'));\n  console.log(summaryw);\n  fetch(\"http://192.168.1.27:8080/api/accounts/transaction\", {\n    method: \"GET\",\n    headers: {\n      'Content-Type': 'application/json',\n      \"Accept\": \"application/json\",\n      \"Authorization\": `Bearer ${jwt}`\n    }\n  }).then(response => response.json()).then(response => {\n    localStorage.setItem('summary', JSON.stringify(response['summary']));\n    const summary = localStorage.getItem('summary');\n    console.log(summary);\n    this.setState({\n      friends: response\n    });\n  }).catch(err => {\n    console.log(err);\n  });\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      children: \"sdfsd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      className: classes.tableContainer,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              children: \"FromAccountNumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              children: \"AccountNumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              children: \"transactionAmount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              children: \"transactionDateTime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.tableHeaderCell,\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: summaryw.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(summaryw => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 2,\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    alt: summaryw.name,\n                    src: \".\",\n                    className: classes.fromAccountNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  lg: 10,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: classes.accountNumber,\n                    children: summaryw.accountNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"primary\",\n                variant: \"subtitle2\",\n                children: summaryw.fromAccountNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                children: summaryw.transaction_type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: summaryw.transactionAmount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.status,\n                style: {\n                  backgroundColor: summaryw.transaction_type === 'Active' && 'green' || summaryw.transaction_type === 'Pending' && 'blue' || summaryw.transaction_type === 'Blocked' && 'orange'\n                },\n                children: summaryw.transactionDateTime\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.status,\n                style: {\n                  backgroundColor: summaryw.transaction_type === 'Deposit' && 'green' || summaryw.transaction_type === 'Transfer' && 'blue' || summaryw.transaction_type === 'withdraw' && 'orange'\n                },\n                children: summaryw.transaction_type\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this)]\n          }, summaryw.fromAccountNumber, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n          children: /*#__PURE__*/_jsxDEV(TablePagination, {\n            rowsPerPageOptions: [5, 10, 15],\n            component: \"div\",\n            count: summaryw.length,\n            rowsPerPage: rowsPerPage,\n            page: page,\n            onChangePage: handleChangePage,\n            onChangeRowsPerPage: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MTable, \"7BftIzpgW+sEagrK3boEUppYm9s=\", false, function () {\n  return [useStyles];\n});\n\n_c = MTable;\nexport default MTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"MTable\");","map":{"version":3,"sources":["C:/Users/BAZRA/Desktop/Bazra project/project react js/Admin/admin/src/MTable.js"],"names":["faker","React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Avatar","Grid","Typography","TablePagination","TableFooter","useStyles","theme","table","minWidth","tableContainer","borderRadius","margin","maxWidth","tableHeaderCell","fontWeight","backgroundColor","palette","primary","dark","color","getContrastText","avatar","light","name","secondary","status","fontSize","padding","display","summaryw","STATUSES","i","findName","email","internet","phone","phoneNumber","jobTitle","company","companyName","joinDate","date","past","toLocaleDateString","Math","floor","random","length","MTable","jwt","JSON","parse","localStorage","getItem","console","log","fetch","method","headers","then","response","json","setItem","stringify","summary","setState","friends","catch","err","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","slice","map","fromAccountNumber","accountNumber","transaction_type","transactionAmount","transactionDateTime"],"mappings":"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","sourcesContent":["import faker from 'faker';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport{ \r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n    Paper,\r\n    Avatar,\r\n    Grid,\r\n    Typography,\r\n    TablePagination,\r\n    TableFooter\r\n }from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n    tableContainer: {\r\n        borderRadius: 15,\r\n        margin: '10px 10px',\r\n        maxWidth: 950\r\n    },\r\n    tableHeaderCell: {\r\n        fontWeight: 'bold',\r\n        backgroundColor: theme.palette.primary.dark,\r\n        color: theme.palette.getContrastText(theme.palette.primary.dark)\r\n    },\r\n    avatar: {\r\n        backgroundColor: theme.palette.primary.light,\r\n        color: theme.palette.getContrastText(theme.palette.primary.light)\r\n    },\r\n    name: {\r\n        fontWeight: 'bold',\r\n        color: theme.palette.secondary.dark\r\n    },\r\n    status: {\r\n        fontWeight: 'bold',\r\n        fontSize: '0.75rem',\r\n        color: 'white',\r\n        backgroundColor: 'grey',\r\n        borderRadius: 8,\r\n        padding: '3px 10px',\r\n        display: 'inline-block'\r\n    }\r\n  }));\r\n\r\nlet summaryw = [], STATUSES = ['Active', 'Pending', 'Blocked'];\r\nfor(let i=0;i<14;i++) {\r\n    summaryw[i] = {\r\n        name: faker.name.findName(),\r\n        email: faker.internet.email(),\r\n        phone: faker.phone.phoneNumber(),\r\n        jobTitle: faker.name.jobTitle(),\r\n        company: faker.company.companyName(),\r\n        joinDate: faker.date.past().toLocaleDateString('en-US'),\r\n        status: STATUSES[Math.floor(Math.random() * STATUSES.length)]\r\n    }\r\n}\r\n\r\nfunction MTable() {\r\n  const jwt =JSON.parse(localStorage.getItem('jwt'));\r\nconst summaryw=JSON.parse(localStorage.getItem('summary'));\r\nconsole.log(summaryw)\r\n  fetch(\"http://192.168.1.27:8080/api/accounts/transaction\", {\r\n  method: \"GET\",\r\n   headers: {\r\n    'Content-Type':'application/json',\r\n          \"Accept\":\"application/json\",\r\n          \"Authorization\":`Bearer ${jwt}`\r\n  }\r\n})\r\n.then(response => response.json())\r\n.then(response => {\r\n    localStorage.setItem('summary', JSON.stringify(response['summary']));\r\n    const summary = localStorage.getItem('summary')\r\n      console.log(summary)\r\n      \r\n   \r\n    \r\n  this.setState({\r\n    friends: response\r\n    \r\n  })\r\n \r\n})\r\n.catch(err => { console.log(err); \r\n});\r\n \r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input>sdfsd</input>\r\n    <TableContainer component={Paper} className={classes.tableContainer}>\r\n      \r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell className={classes.tableHeaderCell}>FromAccountNumber</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>AccountNumber</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>transactionAmount</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>transactionDateTime</TableCell>\r\n            <TableCell className={classes.tableHeaderCell}>Status</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {summaryw.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((summaryw) => (\r\n            <TableRow key={summaryw.fromAccountNumber}>\r\n              <TableCell>\r\n                  <Grid container>\r\n                      <Grid item lg={2}>\r\n                          <Avatar alt={summaryw.name} src='.' className={classes.fromAccountNumber}/>\r\n                      </Grid>\r\n                      <Grid item lg={10}>\r\n                          <Typography className={classes.accountNumber}>{summaryw.accountNumber}</Typography>\r\n                         \r\n                      </Grid>\r\n                      \r\n                  </Grid>\r\n                </TableCell>\r\n              <TableCell>\r\n                  <Typography color=\"primary\" variant=\"subtitle2\">{summaryw.fromAccountNumber}</Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"body2\">{summaryw.transaction_type}</Typography>\r\n                </TableCell>\r\n              <TableCell>{summaryw.transactionAmount}</TableCell>\r\n              <TableCell>\r\n                  <Typography \r\n                    className={classes.status}\r\n                    style={{\r\n                        backgroundColor: \r\n                        ((summaryw.transaction_type === 'Active' && 'green') ||\r\n                        (summaryw.transaction_type === 'Pending' && 'blue') ||\r\n                        (summaryw.transaction_type === 'Blocked' && 'orange'))\r\n                    }}\r\n                  >{summaryw.transactionDateTime}</Typography>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Typography \r\n                    className={classes.status}\r\n                    style={{\r\n                        backgroundColor: \r\n                        ((summaryw.transaction_type === 'Deposit' && 'green') ||\r\n                        (summaryw.transaction_type === 'Transfer' && 'blue') ||\r\n                        (summaryw.transaction_type === 'withdraw' && 'orange'))\r\n                    }}\r\n                  >{summaryw.transaction_type}</Typography>\r\n                </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n        <TableFooter>\r\n        <TablePagination\r\n            rowsPerPageOptions={[5, 10, 15]}\r\n            component=\"div\"\r\n            count={summaryw.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MTable;"]},"metadata":{},"sourceType":"module"}